{
  "name": "bower-resolve",
  "version": "0.0.3",
  "description": "Find the relative path name of a bower module, for use with browserify",
  "main": "index.js",
  "scripts": {
    "test": "grunt ci"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/eugeneware/bower-resolve"
  },
  "keywords": [
    "browserify",
    "bower",
    "debowerify",
    "commonjs",
    "transform",
    "node-browserify",
    "bower.io"
  ],
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/eugeneware/bower-resolve/issues"
  },
  "dependencies": {
    "bower": "~1.2.0"
  },
  "devDependencies": {
    "expect.js": "~0.2.0",
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-contrib-watch": "~0.5.3",
    "grunt": "~0.4.1",
    "grunt-mocha-cli": "~1.1.0",
    "grunt-complexity": "~0.1.3",
    "grunt-cli": "~0.1.9"
  },
  "readme": "# bower-resolve\n\nFind the relative path name of a bower module, for use with [browserify](https://github.com/substack/node-browserify) and [debowerify](https://github.com/eugeneware/debowerify).\n\n[![build status](https://secure.travis-ci.org/eugeneware/bower-resolve.png)](http://travis-ci.org/eugeneware/bower-resolve)\n\n## Installation\n\nThis module is installed via npm:\n\n``` bash\n$ npm install bower-resolve\n```\n\n## Example Usage\n\nFirst, install some bower modules:\n\n``` bash\n$ bower install js-base64\n```\n\nThen to resolve the path of the main javascript file for a given bower module name:\n\n``` js\nvar bowerResolve = require('bower-resolve');\nbowerResolve.init(function () {\n  bowerResolve('js-base64')\n  // returns ./bower_components/js-base64/base64.js'\n});\n```\n\n## Usage with browserify/debowerify\n\nThis is useful for generating stand-alone libraries with\n[browserify](https://github.com/substack/node-browserify) with the\n[debowerify](https://github.com/eugeneware/debowerify) transform:\n\nLet's say you have installed angularjs and jquery using bower:\n\n``` bash\n$ bower install jquery\n$ bower install angular\n```\n\nYou can build out a common library that will contain the jquery and angular\nlibraries into a file called common.js like so:\n\n``` js\n// build out angular and jquery to a library file called common.js\nvar fs = require('fs');\nvar browserify = require('browserify');\nvar bowerResolve = require('bower-resolve');\nbowerResolve.init(function () {\n  var b = browserify();\n  b.require(bowerResolve('angular'), { expose: 'angular' });\n  b.require(bowerResolve('jquery'), { expose: 'jquery' });\n  b.bundle().pipe(fs.createWriteStream('./common.js'));\n});\n```\n\nSimilarly, if you have some other client-side code that you want to rely on\nthis common code, you can use bowerResolve to help you there, by declaring them\nas external dependencies:\n\n``` js\n// app.js\nvar angular = require('angular');\nvar jQuery = require('jquery');\n\njQuery(function ($) {\n  console.log(angular);\n});\n```\n\nThen build it out using browswerify and debowerify as so:\n\n``` js\n// build out app.js and use the angular and jquery libs from common.js\nvar fs = require('fs');\nvar browserify = require('browserify');\nvar bowerResolve = require('bower-resolve');\nbowerResolve.init(function () {\n  var b = browserify(['./app.js']);\n  b.external(bowerResolve('angular'));\n  b.external(bowerResolve('jquery'));\n  b.transform('debowerify');\n  b.bundle().pipe(fs.createWriteStream('./bundle.js'));\n});\n```\n\nThen you'll have `common.js` that will have your shared code, and `bundle.js`\nwill have your client code.\n\nThen you can use them together from your HTML app as follows:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello, bower</title>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"common.js\"></script>\n    <script type=\"text/javascript\" src=\"bundle.js\"></script>\n  </body>\n</html>\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/eugeneware/bower-resolve",
  "_id": "bower-resolve@0.0.3",
  "dist": {
    "shasum": "b72b0fe497b6375f4ba066b3b611760760b83be9"
  },
  "_from": "bower-resolve@0.0.3",
  "_resolved": "https://registry.npmjs.org/bower-resolve/-/bower-resolve-0.0.3.tgz"
}
